{"version":3,"sources":["webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/source/TileJSON.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/string.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/source/WMTS.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/source/Source.js"],"names":["POINT","LINE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","XYZ","_super","opt_options","_this","options","interpolate","undefined","imageSmoothing","projection","tileGrid","extent","maxResolution","maxZoom","minZoom","tileSize","attributions","cacheSize","crossOrigin","opaque","reprojectionErrorThreshold","tileLoadFunction","tilePixelRatio","tileUrlFunction","url","urls","wrapX","transition","attributionsCollapsible","zDirection","gutter_","gutter","getGutter","hasArea","size","scale","ratio","opt_size","toSize","isArray","RegularShape","rotateWithView","opacity","rotation","displacement","declutterMode","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius","radius1","radius2_","radius2","angle_","angle","stroke_","stroke","size_","renderOptions_","render","clone","getScale","style","getFill","getPoints","getRadius","getRadius2","getAngle","getStroke","getRotation","getRotateWithView","slice","getDisplacement","getDeclutterMode","setOpacity","getOpacity","getAnchor","setFill","getHitDetectionImage","createHitDetectionCanvas_","getImage","pixelRatio","image","renderOptions","context","draw_","canvas","getPixelRatio","getImageSize","getImageState","LOADED","getOrigin","getSize","setStroke","listenImageChange","listener","load","unlistenImageChange","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","Infinity","r1","r2","tmp","alpha","Math","PI","a","sin","sqrt","e","miterRatio","k","l","maxr","bevelAdd","aa","bb","dd","ee","innerMiterRatio","innerLength","max","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","add","maxRadius","ceil","translate","createPath_","color","fillStyle","lineWidth","setLineDash","length","drawHitDetectionCanvas_","arc","startAngle","step","i","angle0","radiusC","lineTo","cos","closePath","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","get","src","getKey","set","setSize","maxCacheSize","colorString","shared","RBush","opt_maxEntries","rbush_","items_","insert","value","item","minX","minY","maxX","maxY","extents","values","items","remove","uid","update","bbox","getAll","all","map","getInExtent","search","forEach","callback","forEach_","forEachInExtent","result","isEmpty","getExtent","opt_extent","data","toJSON","concat","rbush","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","getCount","expireCache","keep","pop","containsKey","f","entry","value_","key_","newer","older","getKeys","keys","getValues","peekLast","peekLastKey","peekFirstKey","peek","replace","VectorSourceEvent","type","opt_feature","opt_features","feature","features","VectorSource","state","on","once","un","loader_","format_","format","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","changed","featureKey","addToIndex_","setupChangeEvents_","geometry","getGeometry","dispatchEvent","ADDFEATURE","CHANGE","handleFeatureChange_","PROPERTYCHANGE","valid","id","getId","toString","addFeatures","newFeatures","geometryFeatures","length_1","push","length_2","length_3","modifyingCollection","addEventListener","evt","REMOVEFEATURE","ADD","bind","REMOVE","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","CLEAR","forEachFeature","forEachFeatureAtCoordinateDirect","coordinate","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","opt_projection","multiWorld","canWrapX","getWrapX","apply","anExtent","getClosestFeatureToCoordinate","opt_filter","x","y","closestFeature","closestPoint","NaN","minSquaredDistance","filter","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","event","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","getLength","loadFeatures","resolution","loadedExtentsRtree","extentsToLoad","_loop_1","ii","extentToLoad","alreadyLoaded","object","this_1","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","loading","refresh","removeLoadedExtent","obj","featureChangeKeys","removed","setLoader","setUrl","Style","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","text","zIndex_","zIndex","getRenderer","getText","getZIndex","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","setZIndex","toFunction","styleFunction","styles_1","defaultStyles","createDefaultStyle","width","createEditingStyle","styles","white","blue","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","taintedTestContext","IconImage","imageState","hitDetectionImage_","Image","color_","unlisten_","imageState_","src_","tainted_","isTainted_","ImageState","drawImage","getImageData","dispatchChangeEvent_","EventType","handleImageError_","ERROR","unlistenImage_","handleImageLoad_","height","replaceColor_","fillRect","getSrc","IDLE","LOADING","document","createElement","ctx","getContext","globalCompositeOperation","imgData","r","g","putImageData","Icon","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize_","imgSize","iconImage_","offset_","offset","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","removeEventListener","TileJSON","tileJSON_","tileSize_","jsonp","handleTileJSONResponse","handleTileJSONError","client","XMLHttpRequest","onXHRLoad_","onXHRError_","open","send","tileJSON","status","response","JSON","parse","responseText","err","getTileJSON","epsg4326Projection","sourceProjection","getProjection","transform","gridExtent","getAttributions","attributionExtent_1","setAttributions","frameState","setState","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","distance","bearing","lon1","dByR","lat","asin","lon","PIXELS","Fill","setColor","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","TILELOADSTART","TILELOADEND","TILELOADERROR","TileSource","opaque_","tilePixelRatio_","getTileSize","getMinZoom","tileCache","TileCache","tmpSize","tileOptions","usedTiles","getTileCacheForProjection","forEachLoadedTile","z","tileRange","tile","tileCoordKey","loaded","covered","getState","TileState","getGutterForProjection","setKey","getOpaque","getResolutions","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","tileCoord","isGlobal","updateCacheSize","tileCount","useTile","Source","TileSourceEvent","Event","UrlTile","generateTileUrlFunction_","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","handleTileChange","tileState","TileEventType","setTileLoadFunction","setTileUrlFunction","pruneExceptNewestZ","join","TileImage","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getInterpolate","thisProj","projKey","createTile_","urlTileCoord","tileUrl","EMPTY","cache","sourceTileGrid","targetTileGrid","wrappedTileCoord","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","scaleArray_","displacement_","declutterMode_","getScaleArray","setDisplacement","setRotateWithView","setRotation","setScale","padNumber","number","opt_precision","numberString","toFixed","decimal","indexOf","CircleStyle","setRadius","WMTS","requestEncoding","version_","version","dimensions_","dimensions","layer_","layer","matrixSet_","matrixSet","style_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getLayer","getMatrixSet","getRequestEncoding","getStyle","getVersion","res","updateDimensions","template","m","toLowerCase","localContext_1","getMatrixId","optionsFromCapabilities","wmtsCap","config","layers","elt","index","array","idx","tileMatrixSets","tileMatrixSet","el","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","code","projConfig","switchXY","getAxisOrientation","substr","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","getMetersPerUnit","origin","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","gets","constraint","element","encodings","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","attributions_","adaptAttributions","attributionsCollapsible_","state_","wrapX_","interpolate_","viewResolver","viewRejector","self","viewPromise_","Promise","resolve","reject","getAttributionsCollapsible","getView","attributionLike"],"mappings":"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","file":"js/chunk-002f44af.facfe20a.js","sourcesContent":["/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options} [opt_options] XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        return _this;\n    }\n    /**\n     * @return {number} Gutter.\n     */\n    XYZ.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            declutterMode: options.declutterMode,\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = undefined;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {RenderOptions}\n         */\n        _this.renderOptions_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        var size = this.size_;\n        if (!size) {\n            return null;\n        }\n        var displacement = this.getDisplacement();\n        return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    RegularShape.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n        this.render();\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            this.createHitDetectionCanvas_(this.renderOptions_);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        var image = this.canvas_[pixelRatio];\n        if (!image) {\n            var renderOptions = this.renderOptions_;\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio, renderOptions.size * pixelRatio);\n            this.draw_(renderOptions, context, pixelRatio);\n            image = context.canvas;\n            this.canvas_[pixelRatio] = image;\n        }\n        return image;\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    RegularShape.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n        this.render();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * Calculate additional canvas size needed for the miter.\n     * @param {string} lineJoin Line join\n     * @param {number} strokeWidth Stroke width\n     * @param {number} miterLimit Miter limit\n     * @return {number} Additional canvas size needed\n     * @private\n     */\n    RegularShape.prototype.calculateLineJoinSize_ = function (lineJoin, strokeWidth, miterLimit) {\n        if (strokeWidth === 0 ||\n            this.points_ === Infinity ||\n            (lineJoin !== 'bevel' && lineJoin !== 'miter')) {\n            return strokeWidth;\n        }\n        // m  | ^\n        // i  | |\\                  .\n        // t >|  #\\\n        // e  | |\\ \\              .\n        // r      \\s\\\n        //      |  \\t\\          .                 .\n        //          \\r\\                      .   .\n        //      |    \\o\\      .          .  . . .\n        //          e \\k\\            .  .    . .\n        //      |      \\e\\  .    .  .       . .\n        //       d      \\ \\  .  .          . .\n        //      | _ _a_ _\\#  .            . .\n        //   r1          / `             . .\n        //      |                       . .\n        //       b     /               . .\n        //      |                     . .\n        //           / r2            . .\n        //      |                        .   .\n        //         /                           .   .\n        //      |α                                   .   .\n        //       /                                         .   .\n        //      ° center\n        var r1 = this.radius_;\n        var r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n        if (r1 < r2) {\n            var tmp = r1;\n            r1 = r2;\n            r2 = tmp;\n        }\n        var points = this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n        var alpha = (2 * Math.PI) / points;\n        var a = r2 * Math.sin(alpha);\n        var b = Math.sqrt(r2 * r2 - a * a);\n        var d = r1 - b;\n        var e = Math.sqrt(a * a + d * d);\n        var miterRatio = e / a;\n        if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n            return miterRatio * strokeWidth;\n        }\n        // Calculate the distnce from center to the stroke corner where\n        // it was cut short because of the miter limit.\n        //              l\n        //        ----+---- <= distance from center to here is maxr\n        //       /####|k ##\\\n        //      /#####^#####\\\n        //     /#### /+\\# s #\\\n        //    /### h/+++\\# t #\\\n        //   /### t/+++++\\# r #\\\n        //  /### a/+++++++\\# o #\\\n        // /### p/++ fill +\\# k #\\\n        ///#### /+++++^+++++\\# e #\\\n        //#####/+++++/+\\+++++\\#####\\\n        var k = strokeWidth / 2 / miterRatio;\n        var l = (strokeWidth / 2) * (d / e);\n        var maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n        var bevelAdd = maxr - r1;\n        if (this.radius2_ === undefined || lineJoin === 'bevel') {\n            return bevelAdd * 2;\n        }\n        // If outer miter is over the miter limit the inner miter may reach through the\n        // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n        var aa = r1 * Math.sin(alpha);\n        var bb = Math.sqrt(r1 * r1 - aa * aa);\n        var dd = r2 - bb;\n        var ee = Math.sqrt(aa * aa + dd * dd);\n        var innerMiterRatio = ee / aa;\n        if (innerMiterRatio <= miterLimit) {\n            var innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n            return 2 * Math.max(bevelAdd, innerLength);\n        }\n        return bevelAdd * 2;\n    };\n    /**\n     * @return {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n        var maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n        var size = Math.ceil(2 * maxRadius + add);\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        this.renderOptions_ = this.createRenderOptions();\n        var size = this.renderOptions_.size;\n        this.canvas_ = {};\n        this.size_ = [size, size];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, pixelRatio) {\n        context.scale(pixelRatio, pixelRatio);\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context);\n            }\n        }\n        if (!this.hitDetectionCanvas_) {\n            this.hitDetectionCanvas_ = this.getImage(1);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context The context to draw in.\n     */\n    RegularShape.prototype.createPath_ = function (context) {\n        var points = this.points_;\n        var radius = this.radius_;\n        if (points === Infinity) {\n            context.arc(0, 0, radius, 0, 2 * Math.PI);\n        }\n        else {\n            var radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n            if (this.radius2_ !== undefined) {\n                points *= 2;\n            }\n            var startAngle = this.angle_ - Math.PI / 2;\n            var step = (2 * Math.PI) / points;\n            for (var i = 0; i < points; i++) {\n                var angle0 = startAngle + i * step;\n                var radiusC = i % 2 === 0 ? radius : radius2;\n                context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n            }\n            context.closePath();\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context) {\n        // set origin to canvas center\n        context.translate(renderOptions.size / 2, renderOptions.size / 2);\n        this.createPath_(context);\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number} [opt_maxEntries] Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number} [opt_highWaterMark] High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * Expire the cache.\n     * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n     */\n    LRUCache.prototype.expireCache = function (keep) {\n        while (this.canExpireCache()) {\n            this.pop();\n        }\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*} [opt_options] Options (reserved for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * Return an entry without updating least recently used time.\n     * @param {string} key Key.\n     * @return {T} Value.\n     */\n    LRUCache.prototype.peek = function (key) {\n        if (!this.containsKey(key)) {\n            return undefined;\n        }\n        return this.entries_[key].value_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals, wrapAndSliceX } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options} [opt_options] Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            interpolate: true,\n            projection: undefined,\n            state: 'ready',\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {VectorSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.loadingExtentsCount_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features =\n                /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n        }\n        else if (options.features) {\n            collection =\n                /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (options.features);\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        if (this.hasListener(VectorEventType.ADDFEATURE)) {\n            for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n                this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n            }\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                var removeAndIgnoreReturn = function (feature) {\n                    this.removeFeatureInternal(feature);\n                }.bind(this);\n                this.featuresRtree_.forEach(removeAndIgnoreReturn);\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection~Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get a snapshot of the features currently on the source in random order. The returned array\n     * is a copy, the features are references to the features in the source.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray().slice(0);\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Include features\n     * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent, opt_projection) {\n        var _this = this;\n        if (this.featuresRtree_) {\n            var multiWorld = opt_projection && opt_projection.canWrapX() && this.getWrapX();\n            if (!multiWorld) {\n                return this.featuresRtree_.getInExtent(extent);\n            }\n            var extents = wrapAndSliceX(extent, opt_projection);\n            return [].concat.apply([], extents.map(function (anExtent) { return _this.featuresRtree_.getInExtent(anExtent); }));\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray().slice(0);\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        if (this.featuresRtree_) {\n            return (this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_));\n        }\n        if (this.featuresCollection_) {\n            return this.featuresCollection_.getLength() === 0;\n        }\n        return true;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution, projection);\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                ++this_1.loadingExtentsCount_;\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    --this.loadingExtentsCount_;\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n        this.loading =\n            this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        if (!feature) {\n            return;\n        }\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        var result = this.removeFeatureInternal(feature);\n        if (result) {\n            this.changed();\n        }\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n     *     (or undefined if the feature was not found).\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        var featureChangeKeys = this.featureChangeKeys_[featureKey];\n        if (!featureChangeKeys) {\n            return;\n        }\n        featureChangeKeys.forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n        return feature;\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.url_ = url;\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.hitDetectionRenderer_ =\n            options.hitDetectionRenderer !== undefined\n                ? options.hitDetectionRenderer\n                : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            renderer: this.getRenderer(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Sets a custom renderer function for this style used\n     * in hit detection.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setHitDetectionRenderer = function (renderer) {\n        this.hitDetectionRenderer_ = renderer;\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getHitDetectionRenderer = function () {\n        return this.hitDetectionRenderer_;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>|null}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles['Polygon'] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles['MultiPolygon'] = styles['Polygon'];\n    styles['LineString'] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles['MultiLineString'] = styles['LineString'];\n    styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n    styles['Point'] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles['MultiPoint'] = styles['Point'];\n    styles['GeometryCollection'] = styles['Polygon'].concat(styles['LineString'], styles['Point']);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ ||\n            this.canvas_[pixelRatio] ||\n            this.imageState_ !== ImageState.LOADED) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n            declutterMode: options.declutterMode,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size|undefined}\n         */\n        _this.imgSize_ = options.imgSize;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && _this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), _this.imgSize_ !== undefined ? _this.imgSize_ : null, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            crossOrigin: this.crossOrigin_,\n            imgSize: this.imgSize_,\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            opacity: this.getOpacity(),\n            rotateWithView: this.getRotateWithView(),\n            rotation: this.getRotation(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            src: this.getSrc(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        var anchor = this.normalizedAnchor_;\n        if (!anchor) {\n            anchor = this.anchor_;\n            var size = this.getSize();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n                this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                if (!size) {\n                    return null;\n                }\n                anchor = this.anchor_.slice();\n                if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[0] *= size[0];\n                }\n                if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                    anchor[1] *= size[1];\n                }\n            }\n            if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n                if (!size) {\n                    return null;\n                }\n                if (anchor === this.anchor_) {\n                    anchor = this.anchor_.slice();\n                }\n                if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[0] = -anchor[0] + size[0];\n                }\n                if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                    this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                    anchor[1] = -anchor[1] + size[1];\n                }\n            }\n            this.normalizedAnchor_ = anchor;\n        }\n        var displacement = this.getDisplacement();\n        return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ratio of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { assert } from '../asserts.js';\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: 'loading',\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || (client.status >= 200 && client.status < 300)) {\n            var response = void 0;\n            try {\n                response = /** @type {Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var gridExtent = extentFromProjection(sourceProjection);\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: gridExtent,\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_,\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ? extent : gridExtent;\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState('ready');\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState('error');\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/sphere\n */\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== 'GeometryCollection') {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case 'Point':\n        case 'MultiPoint': {\n            break;\n        }\n        case 'LineString':\n        case 'LinearRing': {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case 'MultiLineString':\n        case 'Polygon': {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case 'MultiPolygon': {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case 'GeometryCollection': {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== 'GeometryCollection') {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n        case 'LinearRing': {\n            break;\n        }\n        case 'Polygon': {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case 'MultiPolygon': {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case 'GeometryCollection': {\n            var geometries = \n            /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n            interpolate: options.interpolate,\n        }) || this;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.on;\n        /***\n         * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n         */\n        _this.once;\n        /***\n         * @type {TileSourceOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        if (_this.tileGrid) {\n            toSize(_this.tileGrid.getTileSize(_this.tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = {\n            transition: options.transition,\n            interpolate: options.interpolate,\n        };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number|import(\"../array.js\").NearestDirectionFunction}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>|null} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        if (!this.tileGrid) {\n            return null;\n        }\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var sourceProjection = this.getProjection();\n        assert(sourceProjection === null || equivalent(sourceProjection, projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: options.interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string} [key] Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            interpolate: interpolate,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     */\n    TileImage.prototype.getKey = function () {\n        var key = _super.prototype.getKey.call(this);\n        if (!this.getInterpolate()) {\n            key += ':disable-interpolation';\n        }\n        return key;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] =\n                    getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!ImageTile} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.getInterpolate());\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!(ImageTile|ReprojTile)} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n        src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n        /**\n         * @private\n         * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n         */\n        this.declutterMode_ = options.declutterMode;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the declutter mode of the shape\n     * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n     * @api\n     */\n    ImageStyle.prototype.getDeclutterMode = function () {\n        return this.declutterMode_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /**\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Pixel ratio.\n     */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the displacement.\n     *\n     * @param {Array<number>} displacement Displacement.\n     * @api\n     */\n    ImageStyle.prototype.setDisplacement = function (displacement) {\n        this.displacement_ = displacement;\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function CircleStyle(opt_options) {\n        var options = opt_options ? opt_options : {};\n        return _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            declutterMode: options.declutterMode,\n        }) || this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n            declutterMode: this.getDeclutterMode(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { appendParams } from '../uri.js';\nimport { assign } from '../obj.js';\nimport { containsExtent } from '../extent.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { createFromTileUrlFunctions, expandUrl } from '../tileurlfunction.js';\nimport { equivalent, get as getProjection, transformExtent } from '../proj.js';\nimport { find, findIndex, includes } from '../array.js';\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        var _this = this;\n        var interpolate = options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n        if (options.interpolate !== undefined) {\n            interpolate = options.interpolate;\n        }\n        // TODO: add support for TileMatrixLimits\n        var requestEncoding = options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            interpolate: interpolate,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ =\n            options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {RequestEncoding}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(_this.createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @param {Array<string>} urls URLs.\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {RequestEncoding} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    WMTS.prototype.createFromWMTSTemplate = function (template) {\n        var requestEncoding = this.requestEncoding_;\n        // context property names are lower case to allow for a case insensitive\n        // replacement as some services use different naming conventions\n        var context = {\n            'layer': this.layer_,\n            'style': this.style_,\n            'tilematrixset': this.matrixSet_,\n        };\n        if (requestEncoding == 'KVP') {\n            assign(context, {\n                'Service': 'WMTS',\n                'Request': 'GetTile',\n                'Version': this.version_,\n                'Format': this.format_,\n            });\n        }\n        // TODO: we may want to create our own appendParams function so that params\n        // order conforms to wmts spec guidance, and so that we can avoid to escape\n        // special template params\n        template =\n            requestEncoding == 'KVP'\n                ? appendParams(template, context)\n                : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n                });\n        var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n        var dimensions = this.dimensions_;\n        return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n                return undefined;\n            }\n            else {\n                var localContext_1 = {\n                    'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                    'TileCol': tileCoord[1],\n                    'TileRow': tileCoord[2],\n                };\n                assign(localContext_1, dimensions);\n                var url = template;\n                if (requestEncoding == 'KVP') {\n                    url = appendParams(url, localContext_1);\n                }\n                else {\n                    url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n                return url;\n            }\n        });\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = \n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = \n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var switchXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    var matrix = matrixSetObj.TileMatrix[0];\n    // create default matrixLimit\n    var selectedMatrixLimit = {\n        MinTileCol: 0,\n        MinTileRow: 0,\n        // subtract one to end up at tile top left\n        MaxTileCol: matrix.MatrixWidth - 1,\n        MaxTileRow: matrix.MatrixHeight - 1,\n    };\n    //in case of matrix limits, use matrix limits to calculate extent\n    if (matrixLimits) {\n        selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n        var m = find(matrixSetObj.TileMatrix, function (tileMatrixValue) {\n            return tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n                matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n                    selectedMatrixLimit.TileMatrix;\n        });\n        if (m) {\n            matrix = m;\n        }\n    }\n    var resolution = (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n    var origin = switchXY\n        ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n        : matrix.TopLeftCorner;\n    var tileSpanX = matrix.TileWidth * resolution;\n    var tileSpanY = matrix.TileHeight * resolution;\n    var matrixSetExtent = matrixSetObj['BoundingBox'];\n    if (matrixSetExtent && switchXY) {\n        matrixSetExtent = [\n            matrixSetExtent[1],\n            matrixSetExtent[0],\n            matrixSetExtent[3],\n            matrixSetExtent[2],\n        ];\n    }\n    var extent = [\n        origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n        // add one to get proper bottom/right coordinate\n        origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n        origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n        origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n    ];\n    if (matrixSetExtent !== undefined &&\n        !containsExtent(matrixSetExtent, extent)) {\n        var wgs84BoundingBox = l['WGS84BoundingBox'];\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        extent = matrixSetExtent;\n        if (wgs84BoundingBox) {\n            wrapX =\n                wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n                    wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n        }\n        else {\n            var wgs84MatrixSetExtent = transformExtent(matrixSetExtent, matrixSetObj['SupportedCRS'], 'EPSG:4326');\n            // Ignore slight deviation from the correct x limits\n            wrapX =\n                wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n                    wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap &&\n        'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === 'KVP') {\n                    if (includes(encodings, 'KVP')) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = 'KVP';\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = 'REST';\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin'],\n    };\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default|null}\n         */\n        _this.projection = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./Source.js\").State}\n         */\n        _this.state_ = options.state !== undefined ? options.state : 'ready';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.interpolate_ = !!options.interpolate;\n        /**\n         * @protected\n         * @type {function(import(\"../View.js\").ViewOptions):void}\n         */\n        _this.viewResolver = null;\n        /**\n         * @protected\n         * @type {function(Error):void}\n         */\n        _this.viewRejector = null;\n        var self = _this;\n        /**\n         * @private\n         * @type {Promise<import(\"../View.js\").ViewOptions>}\n         */\n        _this.viewPromise_ = new Promise(function (resolve, reject) {\n            self.viewResolver = resolve;\n            self.viewRejector = reject;\n        });\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     * @api\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     * @api\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default|null} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|null} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n     */\n    Source.prototype.getView = function () {\n        return this.viewPromise_;\n    };\n    /**\n     * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n     * @return {import(\"./Source.js\").State} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {boolean} Use linear interpolation when resampling.\n     */\n    Source.prototype.getInterpolate = function () {\n        return this.interpolate_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./Source.js\").State} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}