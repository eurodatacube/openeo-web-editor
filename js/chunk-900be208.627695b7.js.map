{"version":3,"sources":["webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/render/VectorContext.js"],"names":["PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","TEXT_ALIGN","CanvasTextBuilder","_super","tolerance","maxExtent","resolution","pixelRatio","_this","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","undefined","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","declutterImageWithText_","finish","instructions","drawText","geometry","feature","fillState","strokeState","textState","coordinates","begin","length","geometryType","getType","flatCoordinates","stride","getStride","placement","LINE","geometryWidths","overflow","getFlatCoordinates","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","push","interiorPoints","getFlatInteriorPoints","i","ii","end","appendFlatPointCoordinates","beg_1","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","updateFillStyle","state","createFill","hitDetectionInstructions","updateStrokeStyle","applyStroke","createStroke","beginGeometry","padding","scale","p0","p1","p2","p3","pixelRatio_1","DRAW_IMAGE","NaN","map","endGeometry","getBufferedMaxExtent","getExtent","ends","getEnds","slice","endss","getEndss","textAlign","flatOffset","flatEnd","o","oo","range","maxAngle","drawChars_","strokeKey","strokeStyle","lineCap","lineDashOffset","lineWidth","lineJoin","miterLimit","lineDash","textKey","font","justify","textBaseline","fillKey","fillStyle","baseline","offsetY","text","strokeWidth","Math","abs","DRAW_CHARS","setTextStyle","textStyle","opt_sharedData","textFillStyle","getFill","getColor","textStrokeStyle","getStroke","getLineDash","getLineDashOffset","getWidth","getMiterLimit","getLineCap","getLineJoin","getFont","textScale","getScaleArray","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","getRotateWithView","textRotation","getRotation","getText","join","RenderEvent","type","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","frameState","context","CanvasImmediateRenderer","extent","transform","viewRotation","opt_squaredTolerance","opt_userTransform","context_","pixelRatio_","extent_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","pixelCoordinates_","tmpLocalTransform_","drawImages_","offset","pixelCoordinates","localTransform","alpha","globalAlpha","rotation","x","y","centerX","centerY","setTransform","apply","translate","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","drawCircle","dx","dy","radius","sqrt","beginPath","arc","PI","fill","stroke","setStyle","style","setImageStyle","getImage","drawGeometry","drawPoint","drawLineString","drawPolygon","drawMultiPoint","drawMultiLineString","drawMultiPolygon","drawGeometryCollection","drawFeature","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","flatMidpoint","geometryExtent","flatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","setLineDash","contextTextState","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","n","imageStyle","imageSize","getSize","imageAnchor","getAnchor","imageOrigin","getOrigin","getOpacity","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","isArray","reduce","acc","t","VectorContext","HIT_DETECT_RESOLUTION","createHitDetectionImageData","size","transforms","features","styleFunction","width","height","imageSmoothingEnabled","canvas","renderer","featureCount","indexFactor","floor","featuresByZIndex","featureStyleFunction","getStyleFunction","styles","index","color","toString","j","jj","originalStyle","clone","setColor","setText","image","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchor","anchorXUnits","IconAnchorUnits","PIXELS","anchorYUnits","opacity","getScale","rotateWithView","zIndex","getZIndex","byGeometryType","replace","zIndexKeys","keys","Number","sort","geomAndStyle","k","kk","getImageData","hitDetect","pixel","imageData","resultFeatures","round","r","data","g","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","RADIUS","EXTENT","METERS_PER_UNIT","EPSG4326Projection","code","opt_axisOrientation","units","DEGREES","axisOrientation","global","metersPerUnit","worldExtent","PROJECTIONS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","METERS","getPointResolution","point","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","toEPSG4326","atan","exp","cache","clear","get","add","projection","source","destination","transformFn","sourceCode","getCode","destinationCode","RenderBox","className","geometry_","element_","document","createElement","position","pointerEvents","map_","startPixel_","endPixel_","disposeInternal","setMap","render_","startPixel","endPixel","px","left","min","top","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","pixels","getCoordinateFromPixelInternal","setCoordinates","getGeometry","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","pointGeometry","myBegin","myEnd","ceil","multiPointGeometry","reverseHitDetectionInstructions","origin","getPixelRatio","getHitDetectionImage","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","appendFlatLineCoordinates","moveToLineToInstruction","lineStringGeometry","multiLineStringGeometry","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","circleGeometry","setFillStrokeStyles_","circleInstruction","polygonGeometry","multiPolygonGeometry","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","applyPixelRatio","dashArray","dash","tmpCoord","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","INTERSECTING","drawCustomCoordinates_","builderEnds","builderEnd","drawCustom","hitDetectionRenderer","builderEndss","builderBegin","myEnds","reverse","instruction","currentFillStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","setSize","console","warn","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","len","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","split","set","clearInterval","fontSpec","families","family","key","weight","setInterval","measureTextHeight","measureElement","metrics","measureText","lineHeight","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","body","offsetHeight","measureAndCacheTextWidth","prev","curr","max","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","h","save","contextInstructions","executeLabelInstructions","restore","label","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","textIsArray","_a","renderWidth","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","anchorX","anchorY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","intersects","origin_1","repeatSize","rotate","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","atan2","batchSize","x1","y1","x2","y2","fn","coords","declutterMode","declutterImageWithText","labelWithAnchor","widthIndex","args","insert","imageArgs","imageDeclutterBox","collides","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","startM","parts","drawChars","c","cc","chars","part","load","i_1","ii_1","result","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","hitExtent","clearRect","indexes","getPixelIndexArray","featureCallback","indexOf","idx","result_1","executor","zs","isEmpty","opt_builderTypes","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","distanceSq","distance","pixelIndex","geometryCollectionGeometry","opt_declutterImageWithText"],"mappings":"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","file":"js/chunk-900be208.627695b7.js","sourcesContent":["/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n     * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n     * WebGL layers currently dispatch this event.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string|Array<string>}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == 'LineString' ||\n                geometryType == 'MultiLineString' ||\n                geometryType == 'Polygon' ||\n                geometryType == 'MultiPolygon')) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == 'LineString') {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == 'MultiLineString') {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == 'Polygon') {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == 'MultiPolygon') {\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            // No `justify` support for line placement.\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case 'Point':\n                case 'MultiPoint':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case 'LineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case 'Circle':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case 'MultiLineString':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case 'Polygon':\n                    flatCoordinates =\n                        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case 'MultiPolygon':\n                    var interiorPoints = \n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            if (geometryWidths &&\n                (end - begin) / 2 !== flatCoordinates.length / stride) {\n                var beg_1 = begin / 2;\n                geometryWidths = geometryWidths.filter(function (w, i) {\n                    var keep = coordinates[(beg_1 + i) * 2] === flatCoordinates[i * stride] &&\n                        coordinates[(beg_1 + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n                    if (!keep) {\n                        --beg_1;\n                    }\n                    return keep;\n                });\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                undefined,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                justify: textState.justify,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.justify = textStyle.getJustify();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.justify || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n     * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n         * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n         * context.\n         * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case 'Point':\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case 'LineString':\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case 'Polygon':\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case 'MultiPoint':\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case 'MultiLineString':\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case 'MultiPolygon':\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case 'GeometryCollection':\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case 'Circle':\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry =\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var _this = this;\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            var lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash\n                : defaultLineDash;\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: this.pixelRatio_ === 1\n                    ? lineDash\n                    : lineDash.map(function (n) { return n * _this.pixelRatio_; }),\n                lineDashOffset: (strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset) * this.pixelRatio_,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: (strokeStyleWidth !== undefined\n                    ? strokeStyleWidth\n                    : defaultLineWidth) * this.pixelRatio_,\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        var imageSize;\n        if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n            this.image_ = null;\n            return;\n        }\n        var imageAnchor = imageStyle.getAnchor();\n        var imageOrigin = imageStyle.getOrigin();\n        this.image_ = imageStyle.getImage(this.pixelRatio_);\n        this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n        this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n        this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n        this.imageOpacity_ = imageStyle.getOpacity();\n        this.imageOriginX_ = imageOrigin[0];\n        this.imageOriginY_ = imageOrigin[1];\n        this.imageRotateWithView_ = imageStyle.getRotateWithView();\n        this.imageRotation_ = imageStyle.getRotation();\n        this.imageScale_ = imageStyle.getScaleArray();\n        this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ =\n                textText !== undefined\n                    ? Array.isArray(textText)\n                        ? textText.reduce(function (acc, t, i) { return (acc += i % 2 ? ' ' : t); }, '')\n                        : textText\n                    : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { clamp } from '../../math.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nexport var HIT_DETECT_RESOLUTION = 0.5;\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] * HIT_DETECT_RESOLUTION;\n    var height = size[1] * HIT_DETECT_RESOLUTION;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, HIT_DETECT_RESOLUTION, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var geometry = originalStyle.getGeometryFunction()(feature);\n            if (!geometry || !intersects(extent, geometry.getExtent())) {\n                continue;\n            }\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n                stroke.setLineDash(null);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image && image.getOpacity() !== 0) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var imgContext = createCanvasContext2D(imgSize[0], imgSize[1], undefined, { alpha: false });\n                var img = imgContext.canvas;\n                imgContext.fillStyle = color;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    opacity: 1,\n                    size: image.getSize(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = style.getZIndex() || 0;\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType['Polygon'] = [];\n                byGeometryType['Circle'] = [];\n                byGeometryType['LineString'] = [];\n                byGeometryType['Point'] = [];\n            }\n            byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n        var y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n        // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n        // for browsers returning coordinates slightly larger than the actual canvas size\n        // due to a non-integer pixel ratio.\n        var index = (clamp(x, 0, imageData.width - 1) +\n            clamp(y, 0, imageData.height - 1) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string} [opt_axisOrientation] Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default|null}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default|null} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * @private\n         * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n         */\n        _this.declutterMode_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_ * this.imagePixelRatio_,\n            this.originY_ * this.imagePixelRatio_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_ * this.imagePixelRatio_,\n            this.originY_ * this.imagePixelRatio_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterMode_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object} [opt_sharedData] Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n        this.image_ = imageStyle.getImage(this.pixelRatio);\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterMode_ = imageStyle.getDeclutterMode();\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultLineDash, defaultLineDashOffset } from '../canvas.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            defaultLineDash,\n            defaultLineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        switch (type) {\n            case 'MultiPolygon':\n                flatCoordinates =\n                    /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n                builderEndss = [];\n                var endss = \n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                offset = 0;\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    var myEnds = [];\n                    offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                    builderEndss.push(myEnds);\n                }\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEndss,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateMultiCoordinatesArray,\n                ]);\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                builderEnds = [];\n                flatCoordinates =\n                    type == 'Polygon'\n                        ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                        : geometry.getFlatCoordinates();\n                offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n                /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    renderer,\n                    inflateCoordinatesArray,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnds,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinatesArray,\n                ]);\n                break;\n            case 'LineString':\n            case 'Circle':\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                    inflateCoordinates,\n                ]);\n                break;\n            case 'MultiPoint':\n                flatCoordinates = geometry.getFlatCoordinates();\n                builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n                if (builderEnd > builderBegin) {\n                    this.instructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        renderer,\n                        inflateCoordinates,\n                    ]);\n                    this.hitDetectionInstructions.push([\n                        CanvasInstruction.CUSTOM,\n                        builderBegin,\n                        builderEnd,\n                        geometry,\n                        hitDetectionRenderer || renderer,\n                        inflateCoordinates,\n                    ]);\n                }\n                break;\n            case 'Point':\n                flatCoordinates = geometry.getFlatCoordinates();\n                this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n                builderEnd = this.coordinates.length;\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                ]);\n                this.hitDetectionInstructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    hitDetectionRenderer || renderer,\n                ]);\n                break;\n            default:\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} [justify] Justify.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var measureElement;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!measureElement) {\n                    measureElement = document.createElement('div');\n                    measureElement.innerHTML = 'M';\n                    measureElement.style.minHeight = '0';\n                    measureElement.style.maxHeight = 'none';\n                    measureElement.style.height = 'auto';\n                    measureElement.style.padding = '0';\n                    measureElement.style.border = 'none';\n                    measureElement.style.position = 'absolute';\n                    measureElement.style.display = 'block';\n                    measureElement.style.left = '-99999px';\n                }\n                measureElement.style.font = fontSpec;\n                document.body.appendChild(measureElement);\n                height = measureElement.offsetHeight;\n                document.body.removeChild(measureElement);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = text\n        .split('\\n')\n        .reduce(function (prev, curr) { return Math.max(prev, measureTextWidth(font, curr)); }, 0);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n    var widths = [];\n    var heights = [];\n    var lineWidths = [];\n    var width = 0;\n    var lineWidth = 0;\n    var height = 0;\n    var lineHeight = 0;\n    for (var i = 0, ii = chunks.length; i <= ii; i += 2) {\n        var text = chunks[i];\n        if (text === '\\n' || i === ii) {\n            width = Math.max(width, lineWidth);\n            lineWidths.push(lineWidth);\n            lineWidth = 0;\n            height += lineHeight;\n            continue;\n        }\n        var font = chunks[i + 1] || baseStyle.font;\n        var currentWidth = measureTextWidth(font, text);\n        widths.push(currentWidth);\n        lineWidth += currentWidth;\n        var currentHeight = measureTextHeight(font);\n        heights.push(currentHeight);\n        lineHeight = Math.max(lineHeight, currentHeight);\n    }\n    return { width: width, height: height, widths: widths, heights: heights, lineWidths: lineWidths };\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextAlign, defaultTextBaseline, drawImageOrLabel, getTextDimensions, measureAndCacheTextWidth, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n    if (i > 0) {\n        acc.push('\\n', '');\n    }\n    acc.push(line, '');\n    return acc;\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string|Array<string>} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var textIsArray = Array.isArray(text);\n        var align = textState.justify\n            ? TEXT_ALIGN[textState.justify]\n            : horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var chunks = textIsArray\n            ? text\n            : text.split('\\n').reduce(createTextChunks, []);\n        var _a = getTextDimensions(textState, chunks), width = _a.width, height = _a.height, widths = _a.widths, heights = _a.heights, lineWidths = _a.lineWidths;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var strokeInstructions = [];\n        var fillInstructions = [];\n        var lineHeight = 0;\n        var lineOffset = 0;\n        var widthHeightIndex = 0;\n        var lineWidthIndex = 0;\n        var previousFont;\n        for (var i = 0, ii = chunks.length; i < ii; i += 2) {\n            var text_1 = chunks[i];\n            if (text_1 === '\\n') {\n                lineOffset += lineHeight;\n                lineHeight = 0;\n                x = align * renderWidth + leftRight * strokeWidth;\n                ++lineWidthIndex;\n                continue;\n            }\n            var font = chunks[i + 1] || textState.font;\n            if (font !== previousFont) {\n                if (strokeKey) {\n                    strokeInstructions.push('font', font);\n                }\n                if (fillKey) {\n                    fillInstructions.push('font', font);\n                }\n                previousFont = font;\n            }\n            lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n            var fillStrokeArgs = [\n                text_1,\n                x +\n                    leftRight * widths[widthHeightIndex] +\n                    align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n                0.5 * (strokeWidth + lineHeight) + lineOffset,\n            ];\n            x += widths[widthHeightIndex];\n            if (strokeKey) {\n                strokeInstructions.push('strokeText', fillStrokeArgs);\n            }\n            if (fillKey) {\n                fillInstructions.push('fillText', fillStrokeArgs);\n            }\n            ++widthHeightIndex;\n        }\n        Array.prototype.push.apply(contextInstructions, strokeInstructions);\n        Array.prototype.push.apply(contextInstructions, fillInstructions);\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string|Array<string>} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(Array.isArray(text) ? text[0] : text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = \n                    /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image =\n                        /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterMode = \n                    /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (instruction[14]);\n                    var declutterImageWithText = \n                    /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[15]);\n                    if (!image && instruction.length >= 20) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[19]);\n                        textKey = /** @type {string} */ (instruction[20]);\n                        strokeKey = /** @type {string} */ (instruction[21]);\n                        fillKey = /** @type {string} */ (instruction[22]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[23]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[24]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 25) {\n                        geometryWidths = /** @type {number} */ (instruction[25]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 17) {\n                        padding = /** @type {Array<number>} */ (instruction[16]);\n                        backgroundFill = /** @type {boolean} */ (instruction[17]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[18]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        if (opt_declutterTree) {\n                            if (declutterMode === 'none') {\n                                // not rendered in declutter group\n                                continue;\n                            }\n                            else if (declutterMode === 'obstacle') {\n                                // will always be drawn, thus no collision detection, but insert as obstacle\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                                continue;\n                            }\n                            else {\n                                var imageArgs = void 0;\n                                var imageDeclutterBox = void 0;\n                                if (declutterImageWithText) {\n                                    var index = dd - d;\n                                    if (!declutterImageWithText[index]) {\n                                        // We now have the image for an image+text combination.\n                                        declutterImageWithText[index] = args;\n                                        // Don't render anything for now, wait for the text.\n                                        continue;\n                                    }\n                                    imageArgs = declutterImageWithText[index];\n                                    delete declutterImageWithText[index];\n                                    imageDeclutterBox = getDeclutterBox(imageArgs);\n                                    if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                        continue;\n                                    }\n                                }\n                                if (opt_declutterTree.collides(dimensions.declutterBox)) {\n                                    continue;\n                                }\n                                if (imageArgs) {\n                                    // We now have image and text for an image+text combination.\n                                    opt_declutterTree.insert(imageDeclutterBox);\n                                    // Render the image before we render the text.\n                                    this.replayImageOrLabel_.apply(this, imageArgs);\n                                }\n                                opt_declutterTree.insert(dimensions.declutterBox);\n                            }\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle =\n                        /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default: // consume the instruction anyway, to avoid an infinite loop\n                    ++i;\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n     * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nvar ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceed that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number} [opt_renderBuffer] Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== 'Image' && builderType !== 'Text') ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>|null} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"../canvas.js\").BuilderType>} [opt_builderTypes] Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     * @param {Function} hitDetectionRenderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer, hitDetectionRenderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map"],"sourceRoot":""}