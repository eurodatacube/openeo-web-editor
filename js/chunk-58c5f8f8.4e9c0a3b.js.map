{"version":3,"sources":["webpack:///./node_modules/ol/renderer/canvas/common.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/renderer/Layer.js"],"names":["IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","IMAGE_SMOOTHING_ENABLED","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","canvasPool","pixelContext","createPixelContext","canvas","document","createElement","width","height","getContext","CanvasLayerRenderer","_super","layer","_this","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","context","containerReused","pixelContext_","frameState","getImageData","image","col","row","data","clearRect","drawImage","err","getBackground","getLayer","background","viewState","resolution","undefined","useContainer","target","transform","opt_backgroundColor","layerClassName","getClassName","className","style","backgroundColor","firstElementChild","HTMLCanvasElement","position","appendChild","left","transformOrigin","clipUnrotated","extent","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","save","beginPath","moveTo","Math","round","lineTo","clip","dispatchRenderEvent_","type","hasListener","event_1","dispatchEvent","preRender","PRERENDER","postRender","POSTRENDER","getRenderTransform","center","rotation","pixelRatio","offsetX","dx1","dy1","sx","sy","dx2","dy2","getDataAtPixel","pixel","hitTolerance","renderPixel","slice","layerExtent","getExtent","renderCoordinate","pixelToCoordinateTransform","x","y","pixelCanvas","name","Uint8Array","disposeInternal","MapRenderer","map","map_","dispatchRenderEvent","calculateMatrices2D","size","forEachFeatureAtCoordinate","coordinate","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","geometry","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","worldWidth","push","layerStates","layerStatesArray","numLayers","length","matches","tmpCoord","i","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","callback_1","bind","order","forEach","m","distanceSq","sort","a","some","forEachLayerAtPixel","hasFeatureAtCoordinate","hasFeature","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","Disposable","expire","Map","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","zIndex","getViewport","insertBefore","firstChild","children_","renderedVisible_","parentNode","removeChild","PRECOMPOSE","declutterLayers","previousElement","ii","layerIndex","sourceState","getSourceState","unrender","element","render","renderDeclutter","POSTCOMPOSE","display","CanvasImageLayerRenderer","imageLayer","image_","getImage","prepareFrame","viewResolution","imageSource","hints","viewHints","renderedExtent","ANIMATING","INTERACTING","sourceProjection","getProjection","loadImage","getState","EMPTY","getData","imageExtent","img","imageMapWidth","floor","imageMapHeight","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","scale","canvasTransform","clipped","dw","dh","getInterpolate","dx","dy","opacity","previousAlpha","globalAlpha","restore","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","tile","state","LOADED","ERROR","updateExecutorGroup_","tileImageNeedsRender_","getTile","z","hifi","wantedResolution","Date","now","time","getRenderMode","VECTOR","renderTileImage_","isDrawableTile","executorGroups","hasContext","getTileImage","layerRevision","getRevision","renderedTiles","revision","renderOrder","getRenderOrder","builderState","getReplayState","dirty","renderedRevision","renderedRenderOrder","declutter","getDeclutter","sourceTileGrid","getTileGrid","tileGrid","getTileGridForProjection","tileExtent","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","_loop_1","t","tt","sourceTile","sourceTileCoord","tileCoord","sourceTileExtent","sharedExtent","builderExtent","getRenderBuffer","this_1","tmpExtent","bufferedExtent","builderGroup","declutterBuilderGroup","squaredTolerance","styles","styleFunction","getStyleFunction","renderFeature","features","getFeatures","getGeometry","executorGroupInstructions","finish","replayExtent","renderingReplayGroup","getOverlaps","declutterExecutorGroup","hitExtent","found","featureCallback","key","getId","match","splice","lastIndexOf","_loop_2","declutteredFeatures","declutterTree","all","item","value","executorGroup","Promise","resolve","reject","renderedProjection","getTileCoordForCoordAndResolution","toString","extent_1","loadingSourceTiles","corner","tilePixel","reduce","accumulator","concat","animatingOrInteracting_","tileSize","getTileSize","getZForResolution","zDirection","transforms","getTileCoordCenter","handleFontsChanged","getVisible","changed","event","renderIfReadyAndVisible","alpha","getOpacity","tiles","execute","getTileRenderTransform","worldOffset","renderMode","replayTypes","tileSource","clips","clipZs","ready","filter","group","hasExecutors","currentZ","contextSaved","currentClip","getClipCoords","jj","opt_declutterBuilderGroup","loading","isArray","replayState","renderedTileResolution","renderedTileRevision","tileResolution","renderPixelRatio","max","getTilePixelSize","renderScale","setTransform","apply","pixelScale","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","newTiles_","tmpTileRange_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","setState","getInterimTile","getRenderSource","tilePixelRatio","getTilePixelRatio","getMinZoom","getTileCoordForCoordAndZ","tileOrigin","getOrigin","gutter","getGutterForProjection","loadedTileCallback","zoom","sourceRevision","canvasExtent","tileRange","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","minX","maxX","minY","maxY","tileCoordIntersectsViewport","uid","inTransition","endTransition","indexOf","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","zs","keys","Number","getOpaque","reverse","currentTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","w","h","transition","i_1","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","animate","postRenderFunction","tileSourceKey","expireCache","getKey","preload","opt_tileCallback","wantedTiles","tileQueue","minZoom","tileCount","IDLE","isKeyQueued","enqueue","useTile","updateCacheSize","CanvasVectorLayerRenderer","vectorLayer","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","NaN","wrappedRenderedExtent_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","opacity_","renderWorlds","opt_declutterTree","vectorSource","snapToPixel","multiWorld","endWorld","ceil","world","setupCompositionContext_","compositionContext","releaseCompositionContext_","replayGroup","isEmpty","startX","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","userTransform","userProjection","userExtent_1","loadFeatures","userExtent","getFeaturesInExtent","replayGroupInstructions","opt_transform","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","forEachLoadedTile","imageState","addEventListener","CHANGE","load"],"mappings":"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","file":"js/chunk-58c5f8f8.4e9c0a3b.js","sourcesContent":["/**\n * @module ol/renderer/canvas/common\n */\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_ENABLED = {\n    imageSmoothingEnabled: true,\n    msImageSmoothingEnabled: true,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { asArray } from '../../color.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { equals } from '../../array.js';\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport var canvasPool = [];\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar pixelContext = null;\nfunction createPixelContext() {\n    var canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    pixelContext = canvas.getContext('2d');\n}\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.pixelContext_ = null;\n        /**\n         * @protected\n         * @type {import(\"../../PluggableMap.js\").FrameState|null}\n         */\n        _this.frameState = null;\n        return _this;\n    }\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number} col The column index.\n     * @param {number} row The row index.\n     * @return {Uint8ClampedArray|null} The image data.\n     */\n    CanvasLayerRenderer.prototype.getImageData = function (image, col, row) {\n        if (!pixelContext) {\n            createPixelContext();\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        try {\n            pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            pixelContext = null;\n            return null;\n        }\n        return data;\n    };\n    /**\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     * @return {string} Background color.\n     */\n    CanvasLayerRenderer.prototype.getBackground = function (frameState) {\n        var layer = this.getLayer();\n        var background = layer.getBackground();\n        if (typeof background === 'function') {\n            background = background(frameState.viewState.resolution);\n        }\n        return background || undefined;\n    };\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {string} [opt_backgroundColor] Background color.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opt_backgroundColor) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.className === layerClassName &&\n            (!opt_backgroundColor ||\n                (target &&\n                    target.style.backgroundColor &&\n                    equals(asArray(target.style.backgroundColor), asArray(opt_backgroundColor))))) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n        if (!this.containerReused &&\n            opt_backgroundColor &&\n            !this.container.style.backgroundColor) {\n            this.container.style.backgroundColor = opt_backgroundColor;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.frameState = frameState;\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var x = Math.round(renderPixel[0]);\n        var y = Math.round(renderPixel[1]);\n        var pixelContext = this.pixelContext_;\n        if (!pixelContext) {\n            var pixelCanvas = document.createElement('canvas');\n            pixelCanvas.width = 1;\n            pixelCanvas.height = 1;\n            pixelContext = pixelCanvas.getContext('2d');\n            this.pixelContext_ = pixelContext;\n        }\n        pixelContext.clearRect(0, 0, 1, 1);\n        var data;\n        try {\n            pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = pixelContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                this.pixelContext_ = null;\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    /**\n     * Clean up.\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        delete this.frameState;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            var layer = layerState.layer;\n            var sourceState = layer.getSourceState();\n            if (!inView(layerState, viewState) ||\n                (sourceState != 'ready' && sourceState != 'undefined')) {\n                layer.unrender();\n                continue;\n            }\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(\n                /** @type {import(\"../layer/BaseVector.js\").default} */ (layer));\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, containsExtent, getHeight, getIntersection, getWidth, intersects as intersectsExtent, isEmpty, } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image) {\n                    if (this.loadImage(image)) {\n                        this.image_ = image;\n                    }\n                    else if (image.getState() === ImageState.EMPTY) {\n                        this.image_ = null;\n                    }\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray} Data at the pixel location.\n     */\n    CanvasImageLayerRenderer.prototype.getData = function (pixel) {\n        var frameState = this.frameState;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(layerExtent, coordinate)) {\n                return null;\n            }\n        }\n        var imageExtent = this.image_.getExtent();\n        var img = this.image_.getImage();\n        var imageMapWidth = getWidth(imageExtent);\n        var col = Math.floor(img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth));\n        if (col < 0 || col >= img.width) {\n            return null;\n        }\n        var imageMapHeight = getHeight(imageExtent);\n        var row = Math.floor(img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight));\n        if (row < 0 || row >= img.height) {\n            return null;\n        }\n        return this.getImageData(img, col, row);\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var extent = frameState.extent;\n        var resolution = viewState.resolution;\n        var rotation = viewState.rotation;\n        // desired dimensions of the canvas in pixels\n        var width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n        var height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        if (!this.getLayer().getSource().getInterpolate()) {\n            assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n        this.preRender(context, frameState);\n        if (render && dw >= 0.5 && dh >= 0.5) {\n            var dx = transform[4];\n            var dy = transform[5];\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = context.globalAlpha;\n                context.globalAlpha = opacity;\n            }\n            context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n            if (opacity !== 1) {\n                context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        assign(context, IMAGE_SMOOTHING_ENABLED);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply as applyTransform, create as createTransform, multiply, reset as resetTransform, scale, scale as scaleTransform, translate as translateTransform, } from '../../transform.js';\nimport { boundingExtent, buffer, containsExtent, equals, getIntersection, getTopLeft, intersects, } from '../../extent.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { getUid } from '../../util.js';\nimport { toSize } from '../../size.js';\nimport { wrapX } from '../../coordinate.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n    'hybrid': ['Polygon', 'LineString'],\n    'vector': [],\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nvar VECTOR_REPLAYS = {\n    'hybrid': ['Image', 'Text', 'Default'],\n    'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {import(\"../../transform\").Transform}\n         */\n        _this.renderedPixelToCoordinateTransform_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     * @return {boolean|undefined} Tile needs to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\n        var render;\n        var state = tile.getState();\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile)) {\n                render = true;\n            }\n        }\n        return render;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var layer = this.getLayer();\n        var tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        if (hifi || !tile.wantedResolution) {\n            tile.wantedResolution = resolution;\n        }\n        var render = this.prepareTile(tile, pixelRatio, projection);\n        if (render &&\n            (hifi || Date.now() - frameState.time < 8) &&\n            layer.getRenderMode() !== VectorTileRenderType.VECTOR) {\n            this.renderTileImage_(tile, frameState);\n        }\n        return _super.prototype.getTile.call(this, z, x, y, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var layer = this.getLayer();\n        return (_super.prototype.isDrawableTile.call(this, tile) &&\n            (layer.getRenderMode() === VectorTileRenderType.VECTOR\n                ? getUid(layer) in tile.executorGroups\n                : tile.hasContext(layer)));\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ !== layerRevision) {\n            this.renderedLayerRevision_ = layerRevision;\n            this.renderedTiles.length = 0;\n        }\n        return _super.prototype.prepareFrame.call(this, frameState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty &&\n            builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder) {\n            return;\n        }\n        var source = layer.getSource();\n        var declutter = layer.getDeclutter();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        delete tile.hitDetectionImageData[layerUid];\n        tile.executorGroups[layerUid] = [];\n        if (declutter) {\n            tile.declutterExecutorGroups[layerUid] = [];\n        }\n        builderState.dirty = false;\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var builderExtent = buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent)\n                ? null\n                : builderExtent;\n            var builderGroup = new CanvasBuilderGroup(0, builderExtent, resolution, pixelRatio);\n            var declutterBuilderGroup = declutter\n                ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n                : undefined;\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup, declutterBuilderGroup);\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent ||\n                    intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getRenderMode() !== VectorTileRenderType.VECTOR &&\n                declutter &&\n                sourceTiles.length === 1\n                ? null\n                : sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n            if (declutterBuilderGroup) {\n                var declutterExecutorGroup = new CanvasExecutorGroup(null, resolution, pixelRatio, source.getOverlaps(), declutterBuilderGroup.finish(), layer.getRenderBuffer());\n                tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = this.getLayer();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var hitExtent = boundingExtent([coordinate]);\n        buffer(hitExtent, resolution * hitTolerance, hitExtent);\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position.\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = feature.getId();\n            if (key === undefined) {\n                key = getUid(feature);\n            }\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var renderedTiles = \n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var _loop_2 = function (i, ii) {\n            var tile = renderedTiles[i];\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            if (!intersects(tileExtent, hitExtent)) {\n                return \"continue\";\n            }\n            var layerUid = getUid(layer);\n            var executorGroups = [tile.executorGroups[layerUid]];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n            if (declutterExecutorGroups) {\n                executorGroups.push(declutterExecutorGroups);\n            }\n            executorGroups.some(function (executorGroups) {\n                var declutteredFeatures = executorGroups === declutterExecutorGroups\n                    ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                    : null;\n                for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                    var executorGroup = executorGroups[t];\n                    found = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, declutteredFeatures);\n                    if (found) {\n                        return true;\n                    }\n                }\n            });\n        };\n        for (var i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n            _loop_2(i, ii);\n        }\n        return found;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorTileLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            var layer = \n            /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var layerUid = getUid(layer);\n            var source = layer.getSource();\n            var projection = this.renderedProjection;\n            var projectionExtent = projection.getExtent();\n            var resolution = this.renderedResolution;\n            var tileGrid = source.getTileGridForProjection(projection);\n            var coordinate = applyTransform(this.renderedPixelToCoordinateTransform_, pixel.slice());\n            var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile;\n            for (var i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n                if (tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()) {\n                    tile = this.renderedTiles[i];\n                    if (tile.getState() === TileState.LOADED) {\n                        var extent_1 = tileGrid.getTileCoordExtent(tile.tileCoord);\n                        if (source.getWrapX() &&\n                            projection.canWrapX() &&\n                            !containsExtent(projectionExtent, extent_1)) {\n                            wrapX(coordinate, projection);\n                        }\n                        break;\n                    }\n                    tile = undefined;\n                }\n            }\n            if (!tile || tile.loadingSourceTiles > 0) {\n                resolve([]);\n                return;\n            }\n            var extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var corner = getTopLeft(extent);\n            var tilePixel = [\n                (coordinate[0] - corner[0]) / resolution,\n                (corner[1] - coordinate[1]) / resolution,\n            ];\n            var features = tile\n                .getSourceTiles()\n                .reduce(function (accumulator, sourceTile) {\n                return accumulator.concat(sourceTile.getFeatures());\n            }, []);\n            var hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n            if (!hitDetectionImageData && !this.animatingOrInteracting_) {\n                var tileSize = toSize(tileGrid.getTileSize(tileGrid.getZForResolution(resolution, source.zDirection)));\n                var rotation = this.renderedRotation_;\n                var transforms = [\n                    this.getRenderTransform(tileGrid.getTileCoordCenter(tile.wrappedTileCoord), resolution, 0, HIT_DETECT_RESOLUTION, tileSize[0] * HIT_DETECT_RESOLUTION, tileSize[1] * HIT_DETECT_RESOLUTION, 0),\n                ];\n                hitDetectionImageData = createHitDetectionImageData(tileSize, transforms, features, layer.getStyleFunction(), tileGrid.getTileCoordExtent(tile.wrappedTileCoord), tile.getReplayState(layer).renderedResolution, rotation);\n                tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n            }\n            resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n        }.bind(this));\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        var context = this.context;\n        var alpha = context.globalAlpha;\n        context.globalAlpha = this.getLayer().getOpacity();\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var tiles = \n        /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        for (var i = 0, ii = tiles.length; i < ii; ++i) {\n            var tile = tiles[i];\n            var declutterExecutorGroups = tile.declutterExecutorGroups[getUid(this.getLayer())];\n            if (declutterExecutorGroups) {\n                for (var j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n                    declutterExecutorGroups[j].execute(this.context, 1, this.getTileRenderTransform(tile, frameState), frameState.viewState.rotation, hifi, undefined, frameState.declutterTree);\n                }\n            }\n        }\n        context.globalAlpha = alpha;\n    };\n    CanvasVectorTileLayerRenderer.prototype.getTileRenderTransform = function (tile, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var rotation = viewState.rotation;\n        var size = frameState.size;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var source = this.getLayer().getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var tileCoord = tile.tileCoord;\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n        var transform = multiply(scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio), this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, worldOffset));\n        return transform;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        _super.prototype.renderFrame.call(this, frameState, target);\n        this.renderedPixelToCoordinateTransform_ =\n            frameState.pixelToCoordinateTransform.slice();\n        this.renderedRotation_ = frameState.viewState.rotation;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var renderMode = layer.getRenderMode();\n        var context = this.context;\n        var alpha = context.globalAlpha;\n        context.globalAlpha = layer.getOpacity();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var viewState = frameState.viewState;\n        var rotation = viewState.rotation;\n        var tileSource = layer.getSource();\n        var tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n        var z = tileGrid.getZForResolution(viewState.resolution, tileSource.zDirection);\n        var tiles = this.renderedTiles;\n        var clips = [];\n        var clipZs = [];\n        var ready = true;\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            ready = ready && !tile.getReplayState(layer).dirty;\n            var executorGroups = tile.executorGroups[getUid(layer)].filter(function (group) { return group.hasExecutors(replayTypes); });\n            if (executorGroups.length === 0) {\n                continue;\n            }\n            var transform = this.getTileRenderTransform(tile, frameState);\n            var currentZ = tile.tileCoord[0];\n            var contextSaved = false;\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            var currentClip = executorGroups[0].getClipCoords(transform);\n            if (currentClip) {\n                for (var j = 0, jj = clips.length; j < jj; ++j) {\n                    if (z !== currentZ && currentZ < clipZs[j]) {\n                        var clip = clips[j];\n                        if (intersects([\n                            currentClip[0],\n                            currentClip[3],\n                            currentClip[4],\n                            currentClip[7],\n                        ], [clip[0], clip[3], clip[4], clip[7]])) {\n                            if (!contextSaved) {\n                                context.save();\n                                contextSaved = true;\n                            }\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher z tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                }\n                clips.push(currentClip);\n                clipZs.push(currentZ);\n            }\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                executorGroup.execute(context, 1, transform, rotation, hifi, replayTypes);\n            }\n            if (contextSaved) {\n                context.restore();\n            }\n        }\n        context.globalAlpha = alpha;\n        this.ready = ready;\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder group for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, undefined, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        if (layer.getRenderMode() === VectorTileRenderType.VECTOR) {\n            return false;\n        }\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var resolution = tile.wantedResolution;\n        return (replayState.renderedTileResolution !== resolution ||\n            replayState.renderedTileRevision !== revision);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, frameState) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n        var renderPixelRatio = (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.round(Math.max(pixelRatio, renderPixelRatio / pixelRatio));\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, renderScale, transform, 0, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED } from './common.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as toTransformString, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { containsCoordinate, createEmpty, equals, getHeight, getIntersection, getRotatedViewport, getTopLeft, getWidth, intersects, } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { toSize } from '../../size.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {LayerType} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray} Data at the pixel location.\n     */\n    CanvasTileLayerRenderer.prototype.getData = function (pixel) {\n        var frameState = this.frameState;\n        if (!frameState) {\n            return null;\n        }\n        var layer = this.getLayer();\n        var coordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            if (!containsCoordinate(layerExtent, coordinate)) {\n                return null;\n            }\n        }\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var viewState = frameState.viewState;\n        var source = layer.getRenderSource();\n        var tileGrid = source.getTileGridForProjection(viewState.projection);\n        var tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n        for (var z = tileGrid.getZForResolution(viewState.resolution); z >= tileGrid.getMinZoom(); --z) {\n            var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n            var tile = source.getTile(z, tileCoord[1], tileCoord[2], pixelRatio, projection);\n            if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n                return null;\n            }\n            if (tile.getState() !== TileState.LOADED) {\n                continue;\n            }\n            var tileOrigin = tileGrid.getOrigin(z);\n            var tileSize = toSize(tileGrid.getTileSize(z));\n            var tileResolution = tileGrid.getResolution(z);\n            var col = Math.floor(tilePixelRatio *\n                ((coordinate[0] - tileOrigin[0]) / tileResolution -\n                    tileCoord[1] * tileSize[0]));\n            var row = Math.floor(tilePixelRatio *\n                ((tileOrigin[1] - coordinate[1]) / tileResolution -\n                    tileCoord[2] * tileSize[1]));\n            var gutter = Math.round(tilePixelRatio * source.getGutterForProjection(viewState.projection));\n            return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n        }\n        return null;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n        var height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        var viewport = rotation\n            ? getRotatedViewport(viewState.center, resolution, rotation, frameState.size)\n            : undefined;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                if (rotation &&\n                    !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)) {\n                    continue;\n                }\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (inTransition && layerState.opacity !== 1) {\n                            // Skipping transition when layer is not fully opaque avoids visual artifacts.\n                            tile.endTransition(uid);\n                            inTransition = false;\n                        }\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = toTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        if (!tileSource.getInterpolate()) {\n            assign(context, IMAGE_SMOOTHING_DISABLED);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var xIndex = originTileCoord[1] - tileCoord[1];\n                var nextX = Math.round(origin_1[0] - (xIndex - 1) * dx_1);\n                var yIndex = originTileCoord[2] - tileCoord[2];\n                var nextY = Math.round(origin_1[1] - (yIndex - 1) * dy_1);\n                var x = Math.round(origin_1[0] - xIndex * dx_1);\n                var y = Math.round(origin_1[1] - yIndex * dy_1);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                var contextSaved = false;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                if (intersects([x, y, x + w, y + h], [clip[0], clip[3], clip[4], clip[7]])) {\n                                    if (!contextSaved) {\n                                        context.save();\n                                        contextSaved = true;\n                                    }\n                                    context.beginPath();\n                                    // counter-clockwise (outer ring) for current tile\n                                    context.moveTo(currentClip[0], currentClip[1]);\n                                    context.lineTo(currentClip[2], currentClip[3]);\n                                    context.lineTo(currentClip[4], currentClip[5]);\n                                    context.lineTo(currentClip[6], currentClip[7]);\n                                    // clockwise (inner ring) for higher z tile\n                                    context.moveTo(clip[6], clip[7]);\n                                    context.lineTo(clip[4], clip[5]);\n                                    context.lineTo(clip[2], clip[3]);\n                                    context.lineTo(clip[0], clip[1]);\n                                    context.clip();\n                                }\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition);\n                if (clips && !inTransition) {\n                    if (contextSaved) {\n                        context.restore();\n                    }\n                    this.renderedTiles.unshift(tile);\n                }\n                else {\n                    this.renderedTiles.push(tile);\n                }\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        assign(context, IMAGE_SMOOTHING_ENABLED);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var alpha = layerState.opacity *\n            (transition ? tile.getAlpha(uid, frameState.time) : 1);\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== layerState.opacity) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to `preload` levels.\n     * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var rotation = frameState.viewState.rotation;\n        var viewport = rotation\n            ? getRotatedViewport(frameState.viewState.center, frameState.viewState.resolution, rotation, frameState.size)\n            : undefined;\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (rotation &&\n                        !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)) {\n                        continue;\n                    }\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, { canvasPool } from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { HIT_DETECT_RESOLUTION, createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createCanvasContext2D, releaseCanvas } from '../../dom.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { equals } from '../../array.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, toUserResolution, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.wrappedRenderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.compositionContext_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.opacity_ = 1;\n        return _this;\n    }\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.compositionContext_;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    CanvasVectorLayerRenderer.prototype.setupCompositionContext_ = function () {\n        if (this.opacity_ !== 1) {\n            var compositionContext = createCanvasContext2D(this.context.canvas.width, this.context.canvas.height, canvasPool);\n            this.compositionContext_ = compositionContext;\n        }\n        else {\n            this.compositionContext_ = this.context;\n        }\n    };\n    CanvasVectorLayerRenderer.prototype.releaseCompositionContext_ = function () {\n        if (this.opacity_ !== 1) {\n            var alpha = this.context.globalAlpha;\n            this.context.globalAlpha = this.opacity_;\n            this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n            this.context.globalAlpha = alpha;\n            releaseCanvas(this.compositionContext_);\n            canvasPool.push(this.compositionContext_.canvas);\n            this.compositionContext_ = null;\n        }\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.setupCompositionContext_();\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n            this.releaseCompositionContext_();\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, this.getBackground(frameState));\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            return null;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        this.opacity_ = layerState.opacity;\n        this.setupCompositionContext_();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        var render = true;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            render = intersectsExtent(layerExtent, frameState.extent);\n            clipped = render && !containsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n            }\n        }\n        if (render) {\n            this.renderWorlds(replayGroup, frameState);\n        }\n        if (clipped) {\n            this.compositionContext_.restore();\n        }\n        this.releaseCompositionContext_();\n        this.postRender(context, frameState);\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.wrappedRenderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] * HIT_DETECT_RESOLUTION;\n                var height = size[1] * HIT_DETECT_RESOLUTION;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, HIT_DETECT_RESOLUTION, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup &&\n                frameState.declutterTree\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((this.ready && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var renderedExtent = extent.slice();\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (this.ready &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.wrappedRenderedExtent_, extent)) {\n            if (!equals(this.renderedExtent_, renderedExtent)) {\n                this.hitDetectionImageData_ = null;\n                this.renderedExtent_ = renderedExtent;\n            }\n            this.renderedCenter_ = center;\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                var extent_1 = loadExtents[i];\n                var userExtent_1 = toUserExtent(extent_1, projection);\n                vectorSource.loadFeatures(userExtent_1, toUserResolution(resolution, projection), userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var ready = true;\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                ready = ready && !dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        this.ready = ready;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = renderedExtent;\n        this.wrappedRenderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * The renderer is initialized and ready to render.\n         * @type {boolean}\n         */\n        _this.ready = true;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n     */\n    LayerRenderer.prototype.getData = function (pixel) {\n        return null;\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return null;\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n            layer.changed();\n        }\n    };\n    /**\n     * Clean up.\n     */\n    LayerRenderer.prototype.disposeInternal = function () {\n        delete this.layer_;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map"],"sourceRoot":""}